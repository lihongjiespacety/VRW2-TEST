/**
 *****************************************************************************        
 * \brief       硬件抽象层(HAL)HAL模块(HAL)相关数据结构和接口描述.
 * \details     Copyright (c) 2017,长沙威胜信息技术有限公司.
 *              All rights reserved.    
 * \file        hal.h  
 * \author      李红洁W18900
 * \version     1.0 
 * \date        2017-10-17
 * \note        使用前请参考注释.\n
 *              HAL只做抽象描述,具体资源由BSP实现.\n
 *              本头文件作为HAL层总的头文件.
 * \since       李红洁      2017-10-17 11:07:37     1.0     新建 
 * \par 修订记录
 * - 2017-10-17 初始版本
 * \par 资源说明
 * - RAM:              
 * - ROM:
 *****************************************************************************
 */

#ifndef __HAL_H
#define __HAL_H

#ifdef __cplusplus
 extern "C" {
#endif

     
/** \addtogroup HAL 硬件抽象层(HAL)
 *  \{
 */    
     
/** \addtogroup HAL_HAL 硬件抽象层(HAL)HAL模块(HAL)
 *  \{
 */
   
#include "hal_uart.h"

     
/*****************************************************************************    
 *                                                                           *
 *                             数据结构描述                                  *
 *                                                                          *
 ****************************************************************************/
   

/** \defgroup HAL_HAL_data 硬件抽象层(HAL)HAL模块(HAL)数据结构
  * \{
  */
   
#define HAL_VERSION 0x10    /**< HAL层版本数据高四位代表大版本号,低四位代表小版本号。比如0x10代表版本1.0 */

/**
  * \}
  */
/*****************************************************************************    
 *                                                                           
 *                             接口函数描述                                   
 *                                                                            
 ****************************************************************************/

/** \defgroup HAL_HAL_if 硬件抽象层(HAL)HAL模块(HAL)接口
  * \{
  */


/**
 *****************************************************************************
 * \fn          int HAL_Init(void)
 * \brief       初始化HAL模块,包括必要的BSP初始化.
 * \note        系统调用该函数完成最底层的初始化.
 * \retval      0  初始化成功.
 * \retval      -1 初始化失败.
 *****************************************************************************
 */
int HAL_Init(void);

/**
 *****************************************************************************
 * \fn          unsigned int HAL_GetBSPVersion(void)
 * \brief       获取HAL依赖的BSP版本.
 * \note        .  
 * \return      unsigned int 返回版本信息 \ref HAL_VERSION 
 *****************************************************************************
 */
unsigned int HAL_GetBSPVersion(void);

/**
 *****************************************************************************
 * \fn          unsigned int HAL_GetHALVersion(void)
 * \brief       获取HAL版本.
 * \note        .  
 * \return      unsigned int 返回版本信息 \ref HAL_VERSION 
 *****************************************************************************
 */
unsigned int HAL_GetHALVersion(void);

/**
 *****************************************************************************
 * \fn          int HAL_DeInit(void)
 * \brief       解除HAL模块初始化.
 * \note        .
 * \retval      0  成功.
 * \retval      -1 失败.
 *****************************************************************************
 */
int HAL_DeInit(void);
/**
  * \}
  */

/** \defgroup HAL_samp 硬件抽象层(HAL)HAL模块(HAL)使用样例
  * \{
  */

/*****************************************************************************    
 *                                                                           
 *                             使用样例                                   
 *                                                                            
 ****************************************************************************/

/**
 *****************************************************************************
 * \fn          void hal_samp(void)
 * \brief       使用样例.
 * \par   参见  【示例】标签下的【hal_samp.c】
 *****************************************************************************
 */
void hal_hal_samp(void);

/**
 *\example hal_samp.c
 * 硬件抽象层(HAL)HAL模块(HAL)使用样例.\n
 */

/**
  * \}
  */

/**
  * \}
  */

/**
  * \}
  */

#ifdef __cplusplus
}
#endif

#endif
